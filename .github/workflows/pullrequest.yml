name: Comment on Pull Request

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  issues: write

jobs:
  comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Find existing bot comment
        id: find_comment
        uses: actions/github-script@v6
        with:
          script: |
            // Get the current timestamp in ISO format
            const timestamp = new Date().toISOString();
            // Build the comment message including a unique marker and timestamp
            const message = `<!-- my-bot-comment --> A new commit has been pushed to this pull request. Timestamp: ${timestamp}`;
            
            // Retrieve all comments on the pull request
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            // Look for an existing comment with our unique marker
            const botComment = comments.find(comment => comment.body.includes('<!-- my-bot-comment -->'));
            
            if (botComment) {
              // Update the existing comment with the new message and timestamp
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message,
              });
            } else {
              // Create a new comment if none exists
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message,
              });
            }